version: "3"

services:
  database:
    image: olgafedorova/microservices-db
    hostname: database
    container_name: database
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - microservices
  eurekaserver:
    image:   olgafedorova/eurekaserver
    hostname: eurekaserver
    container_name: eurekaserver
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 60s
      timeout: 30s
      retries: 5
    networks:
      - microservices
  configserver:
    image: olgafedorova/config-server
    hostname: configserver
    container_name: configserver
    ports:
      - "8888:8888"
    environment:
      ENCRYPT_KEY: "IMSYMMETRIC"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 60s
      timeout: 30s
      retries: 5
    networks:
      - microservices
  licensingservice:
    image: olgafedorova/licenses
    ports:
      - "8080:8080"
    restart: always
    environment:
      PROFILE: "default"
      CONFIG_URI: "http://configserver:8888"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      - eurekaserver
      - configserver
      - database
    networks:
      - microservices
  organizationgservice:
    image: olgafedorova/organizations
    ports:
      - "8081:8081"
    restart: always
    environment:
      PROFILE: "default"
      CONFIG_URI: "http://configserver:8888"
      ENCRYPT_KEY: "IMSYMMETRIC"
    depends_on:
      - eurekaserver
      - configserver
      - database
    networks:
      - microservices

networks:
  microservices:
    driver: bridge
